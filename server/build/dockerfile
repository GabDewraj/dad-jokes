FROM golang:1.19-alpine AS build_base

RUN apk add --no-cache git

# Set the Current Working Directory inside the container
RUN mkdir build
WORKDIR /build

# # Copy source directory
COPY . .
RUN go mod tidy
RUN go mod download


# Build the app
RUN go build -o server "./cmd/"


# Unit tests

# Second build with Artifact from the previous build
FROM alpine:3.9 
RUN apk add ca-certificates
ARG ENV
ARG DB_HOST
ARG DB_NAME
ARG DB_PASSWORD
ARG DB_PORT
ARG DB_USER
ENV ENV=${ENV}
ENV DB_HOST=${DB_HOST}
ENV DB_NAME=${DB_NAME}
ENV DB_PASSWORD=${DB_PASSWORD}
ENV DB_PORT=${DB_PORT}
ENV DB_USER=${DB_USER}
COPY --from=build_base /build /app
COPY ./cmd/config/$ENV.yml ./config/$ENV.yml
COPY ./cmd/certificates/$ENV.crt ./certificates/$ENV.crt
COPY ./cmd/certificates/$ENV.key ./certificates/$ENV.key

# This container exposes port 9000 to the outside world
EXPOSE 8080
# Run the binary program produced by `go install`
CMD ["/app/server"]